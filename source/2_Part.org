 #+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil  
#+TITLE: Python Key Skills - 2
#+AUTHOR: Xiaohui Ellis

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Python Key Skills 2
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It - for loops and while loops
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
 + The purpose of loops is to repeat a set of commands or a block of code
*** for loops
+ for loops are normally used to repeat a set of commands for a specific known number of times.
#+BEGIN_SRC Python

for i in range(5):
    print("Hello world!")
#+END_SRC
+ the above code will print out "Hello world!" 5 times with i starting from 0, increasing each loop by 1, up to 4.
+ the range is a Python built-in function that produce a series of numbers.

*** while loops
+ while loops are normally used to repeat a set of commands until certain condition(s) are no longer true.
+ Example while loop 1:
#+BEGIN_SRC Python
i=0
while i < 5:
    print("Hello world!")
    i = i + 1
#+END_SRC

+ Example while loop 2:
#+BEGIN_SRC Python
hungry = True
while hungry:
    print("I need eat more.")
    answer = input("Are you still hungry?(Y/N)")
    if answer == "N":
       hungry = False
#+END_SRC

+ The above loop will end if the user input "N", which changes the hungry variable to "False".  This means, the condition is not true anymore.


** Learn It - check if a whole number is even or odd
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

- We know from maths that all even numbers can be divisible by 2. In other words, any even number, when divided by 2, the reminder should be 0 - no reminder.
- In Python, we have learned that the reminder operator is *%*. For example: 24%2 = 0; 25%2=1; 1%2=1 etc
- So if the reminder is 0 when divided by 2, then the number is even.

#+BEGIN_SRC 
myNum = int(input("Please give me a whole number: "))

if myNum % 2 == 0:
   print("The number you game to me is an even number")
else:
   print("The number you game to me is an odd number")
#+END_SRC
