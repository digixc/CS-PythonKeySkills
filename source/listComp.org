#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil

#+TITLE: Python Key Skills - List Comprehension
#+AUTHOR: E Ellis

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* List Comprehensions
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

- There is an easier way of creating lists in Python called =List Comprehensions=.
- Using only one line of code you will create a list of data that meet certain criteria.
** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- The easiest way of learning about list comprehensions is to write some.
#+begin_src python
numbersto10 = [number for number in range(10)]
#+end_src
- We start by naming our list.
- In the square brackets is the list comprehension.
- This one says.
  - Fill the list with =number=
  - Where =number= is each element of =range(10)=
- Let's have a look at another one.
#+begin_src python
foo = 'Hello World!'
bar = [character for character in foo]
#+end_src
- Here we create a list containing all the characters that are in foo.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- Type each line of the following code into a Python intepreter.
- Try to understand how each list is created by examining the results
#+begin_src python
List1 = [i for i in range(20,10,-1)]
print(List1)
#+end_src
#+begin_src python
List2 = [j**2 for j in range(10)]
print(List2)
#+end_src
#+begin_src python
List3 = [k for k in range(100) if k % 2 == 0]
print(List3)
#+end_src
#+begin_src python
List4 = [l.lower() for l in 'ABCDEFG']
print(List4)
#+end_src
#+begin_src python
List5 = ['_' for m in 'Hello World!']
print(List5)
#+end_src
#+begin_src python
List6 = [n for n in 'The Quick Brown Fox' if n.upper() == n and n != ' ']
print(List6)
#+end_src
#+begin_src python
List7 = [word[0] for word in 'my race should continue on to the island 
shore to help ease boring eye strain tonight'.split()]
print(List7)
#+end_src
#+begin_src python
List8 = [[row[i] for row in [[1,2,3],[4,5,6],[7,8,9]]]for i in range(3)]
print(List8)
#+end_src

** Code It - your own list comprehension
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- Use list comprehensions to create the following lists.
  1. [-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0]
  2. A list of all consonants in the sentence 'The quick brown fox jumped over the lazy dog'
  3. A list of all square numbers formed by squaring the numbers from 1 to 1000.
