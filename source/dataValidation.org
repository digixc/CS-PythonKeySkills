#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil

#+TITLE: Python Key Skills - Data Validation
#+AUTHOR: X Ellis

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Data Validation
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

- *Data Validation* means to check data used or entered in a program are valid.
- *valid* can mean different things depending on the context of the program. For example, it could be that your program only accepts alphabetical letters or numbers, or a number that is only within a certain range or a legitimate email address.
** Code It - example 1: only accepts numbers as input
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- The easiest way of doing this is to use the Python built-in function *isnumeric*
#+BEGIN_HTML
<iframe src="https://trinket.io/embed/python/97b8fbcea2?start=result" width="100%" height="300" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_HTML
** Code It - example 2: only accepts numbers within expected range
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- To accomplish this, we need to use if statements and additional flag (True or False Boolean value)
#+BEGIN_HTML
<iframe src="https://trinket.io/embed/python/23aee6f6c2?start=result" width="100%" height="400" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_HTML

** Code It - example 3: only accepts alphabetical letters
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- To accomplish this, we need to use another built-in function *isalpha*
#+BEGIN_HTML
<iframe src="https://trinket.io/embed/python/66b6c22a6a?start=result" width="100%" height="400" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_HTML
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- Can you work out how to validate an input that is alphabetical letters and it can only be not more than 12 characters long?

#+BEGIN_HTML
<iframe src="https://trinket.io/embed/python/df86544b30" width="100%" height="400" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_HTML
