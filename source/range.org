#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Python Range Function
#+AUTHOR: Xiaohui Ellis

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/7-CS-Turing">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="6_Lesson.html">Week6</a></li
      <li><a href="homework.html">Homework</a></li>

    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Python *range* function
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:EN

** The basics
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:


- Range command works like this:
  1. =range(upToNumber)= - it produce a sequence of numbers from 0 up to BUT NOT equal to the upToNumber. For example, range(5) will produce: =0,1,2,3,4=, therefore, there are 5 numbers, for each number the loop going through, it prints out "Welcome to the range".
  2. =range(startNumber, upToNumber)= - it produces a sequence of numbers from startNumber to BUT NOT equal to the upToNumber. For example, range(3,8) will produce: =3,4,5,6,7=
  3. =range(startNumber, upToNumber, increaseBy)=- it produces a sequence of numbers from startNumber to BUT NOT equal to the upToNumber, each time the next number increase by the number specified by =increaseBy=. For example, range(2,10,2) will produce: =2,4,6,8=. 
  4. the startNumber, upToNumber, increaseBy must be integers
- What can it be used for:
x  + Most often you will use the *range* function to control how many times a loop should repeat
  + Another common use is to iterate through a list one item at a time or even skip by a fixed number by giving the increaseBy parameter a number.
** Try it out
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

1. Example 1:
#+BEGIN_HTML

<iframe src="https://trinket.io/embed/python/4b3f2573e1?start=result" width="100%" height="400" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

#+END_HTML

  1. What numbers are produced in this loop:
    #+BEGIN_HTML
 <!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><table  style="text-align:left;"><tr><td><pre style="margin: 0; line-height: 125%">1
 2</pre></td><td><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-weight: bold">for</span> i <span style="color: #000000; font-weight: bold">in</span> <span style="color: #007020">range</span>(<span style="color: #0000DD; font-weight: bold">10</span>, <span style="color: #0000DD; font-weight: bold">20</span>, <span style="color: #0000DD; font-weight: bold">2</span>):
     <span style="color: #008800; font-weight: bold">print</span>(i)
 </pre></td></tr></table></div>


    #+END_HTML

  2. What numbers are produced in this loop:
    #+BEGIN_HTML
 <!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><table style="text-align:left;"><tr><td><pre style="margin: 0; line-height: 125%">1
 2</pre></td><td><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-weight: bold">for</span> i <span style="color: #000000; font-weight: bold">in</span> <span style="color: #007020">range</span>(<span style="color: #0000DD; font-weight: bold">100</span>, <span style="color: #0000DD; font-weight: bold">40</span>, <span style="color: #333333">-</span><span style="color: #0000DD; font-weight: bold">5</span>):
     <span style="color: #008800; font-weight: bold">print</span>(i)
 </pre></td></tr></table></div>

    #+END_HTML

  3. write a for loop that will print out all positive whole numbers (integers) up to 100 that are divisible by 5.
	 
